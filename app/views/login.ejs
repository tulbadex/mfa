<%- include('partials/header', { pageTitle: 'Login' }); -%>
<body>
    <div class="container mt-5">
        <h2>Login</h2>
        <div id="error-message" class="alert alert-danger" style="display: none;"></div>
        <!-- Display success message -->
        <div id="success-message" class="alert alert-success" style="display: none;"></div>
        <form id="login-form" autocomplete="off">
            <div class="form-group">
                <label for="username">Username</label>
                <input type="text" class="form-control" id="username" name="username" placeholder="Username" required>
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" class="form-control" id="password" name="password" placeholder="Password" required>
            </div>
            <button type="submit" class="btn btn-primary mt-2" id="login-button">Login</button>
            <a href="/auth/register" class="btn btn-link mt-1">Don't have an account? Register</a>
        </form>
    </div>

    <%- include('partials/footer'); -%>

    <script>
        // Handle form submission
        const loginForm = document.getElementById('login-form');
        const loginButton = document.getElementById('login-button');
        const errorMessage = document.getElementById('error-message');
        const successMessage = document.getElementById('success-message');
    
        loginButton.addEventListener('click', function (event) {
          event.preventDefault();
    
          loginButton.disabled = true;
    
          // Get form elements
          var username = document.querySelector('[name="username"]').value;
          var password = document.querySelector('[name="password"]').value;
    
          // Perform form validation (add your validation logic here)
          var validationError = '';
          if (!username || !password) {
            validationError.textContent = 'Please fill out all fields.';
          }
    
          if (validationError) {
            errorMessage.textContent = validationError;
            errorMessage.style.display = 'block';
            successMessage.style.display = 'none';
            loginButton.disabled = false;
            return;
          }
    
          const requestData = {
            username,
            password,
          }
    
          fetch('/auth/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json' // Set the content type to JSON
            },
            body: JSON.stringify(requestData) 
          })
          .then(response => response.json())
          .then(data => {
            if (!data.status) {
                errorMessage.textContent = data.message;
                errorMessage.style.display = 'block';
                successMessage.style.display = 'none';
                return
            } else {
                successMessage.textContent = data.message;
                errorMessage.style.display = 'none';
                successMessage.style.display = 'block';
                loginForm.reset()
                location.href = '/auth/verify'
            }
          })
          .catch(error => {
            console.error(error);
            errorMessage.textContent = 'An error occurred.';
            errorMessage.style.display = 'block';
            successMessage.style.display = 'none';
            return
          })
          .finally(() => {
            // Re-enable the registration button
            loginButton.disabled = false;
          });;
        });
    </script>
</body>
</html>